using System.IO;

namespace Chisel;

internal sealed class MermaidWriter(TextWriter writer) : GraphWriter(writer)
{
    public override string FormatName => "Mermaid";

    private static string ClassDef(string name, Color color)
    {
        var classDef = $"classDef {name} fill:{color.Fill},stroke:{color.Stroke}";
        return string.IsNullOrEmpty(color.Text) ? classDef : classDef + ",color:" + color.Text;
    }

    protected override void WriteHeader(bool hasProject, bool hasIgnored, bool hasRemoved, GraphOptions options)
    {
        Writer.WriteLine("%% Generated by https://github.com/0xced/Chisel");
        Writer.WriteLine();
        Writer.Write("graph");
        if (options.Direction == GraphDirection.LeftToRight)
            Writer.Write(" LR");
        else if (options.Direction == GraphDirection.TopToBottom)
            Writer.Write(" TB");
        Writer.WriteLine();

        Writer.WriteLine();
        Writer.WriteLine(ClassDef("default", options.Color.Default));
        if (hasProject)
            Writer.WriteLine(ClassDef("project", options.Color.Project));
        if (hasIgnored)
            Writer.WriteLine(ClassDef("ignored", options.Color.Ignored));
        if (hasRemoved)
            Writer.WriteLine(ClassDef("removed", options.Color.Removed));
        Writer.WriteLine();
    }

    protected override void WriteFooter()
    {
    }

    protected override void WriteRoot(Package package, GraphOptions options)
    {
        Writer.WriteLine($"{GetPackageId(package, options)}");
    }

    protected override void WriteNode(Package package, GraphOptions options)
    {
        var className = package.State switch
        {
            PackageState.Ignore => "ignored",
            PackageState.Remove => "removed",
            _ => package.IsProjectReference ? "project" : "default",
        };
        Writer.WriteLine($"class {GetPackageId(package, options)} {className}");
    }

    protected override void WriteEdge(Package package, Package dependency, GraphOptions options)
    {
        Writer.WriteLine($"{GetPackageId(package, options)} --> {GetPackageId(dependency, options)}");
    }
}